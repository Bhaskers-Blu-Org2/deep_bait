FROM nvidia/cuda:8.0-cudnn6-devel-ubuntu16.04

RUN echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list

RUN apt-get update && apt-get install -y --no-install-recommends \
         build-essential \
         cmake \
         git \
         curl \
         vim \
         wget \
		 libgflags-dev \
		 libgoogle-glog-dev \
		 libgtest-dev \
		 libiomp-dev \
		 libleveldb-dev \
		 liblmdb-dev \
		 libopencv-dev \
		 libopenmpi-dev \
		 libprotobuf-dev \
		 libsnappy-dev \
		 openmpi-bin \
		 openmpi-doc \
		 protobuf-compiler \
         ca-certificates \
         protobuf-compiler \
         libnccl2=2.0.5-2+cuda8.0 \
         libnccl-dev=2.0.5-2+cuda8.0 \
         libjpeg-dev \
         libfreetype6-dev \
         libpng-dev &&\
     rm -rf /var/lib/apt/lists/*


ENV PYTHON_VERSION=3.5
RUN curl -o ~/miniconda.sh -O  https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
     /opt/conda/bin/conda create -y --name caffe2-py$PYTHON_VERSION python=$PYTHON_VERSION numpy pyyaml scipy \
     ipython mkl pandas jupyter ipykernel scikit-learn && \
     /opt/conda/bin/conda clean -ya
ENV PATH /opt/conda/envs/caffe2-py$PYTHON_VERSION/bin:$PATH

RUN pip install --upgrade pip && \
    pip install protobuf toolz

RUN git clone --recursive https://github.com/caffe2/caffe2.git && cd caffe2 &&\
	make && cd build && make install &&\
	python /caffe2/setup.py install

WORKDIR /workspace
RUN chmod -R a+w /workspace

COPY ssh_config /root/.ssh/config
RUN apt-get update && apt-get install -y --no-install-recommends \
        openssh-client \
        openssh-server \
        iproute2 \
        git \
        pandoc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    # configure ssh server and keys
    && mkdir /var/run/sshd \
    && ssh-keygen -A \
    && sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config \
    && sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \
    && ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' \
    && chmod 600 /root/.ssh/config \
    && chmod 700 /root/.ssh \
    && cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys

RUN git clone https://github.com/msalvaris/gpu_monitor.git && \
    pip install -r gpu_monitor/requirements.txt && \
	pip install -e gpu_monitor

EXPOSE 23
CMD ["/usr/sbin/sshd", "-D", "-p", "23"]

